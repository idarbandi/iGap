[
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AnonymousUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "SpectacularAPIView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "SpectacularSwaggerView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "AccountViewSet",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "JWTCookieTokenObtainPairView",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "JWTCookieTokenRefreshView",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "LogOutAPIView",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "RegisterView",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "CategoryListView",
        "importPath": "server.views",
        "description": "server.views",
        "isExtraImport": true,
        "detail": "server.views",
        "documentation": {}
    },
    {
        "label": "ServerListView",
        "importPath": "server.views",
        "description": "server.views",
        "isExtraImport": true,
        "detail": "server.views",
        "documentation": {}
    },
    {
        "label": "WebChatConsumer",
        "importPath": "webchat.consumer",
        "description": "webchat.consumer",
        "isExtraImport": true,
        "detail": "webchat.consumer",
        "documentation": {}
    },
    {
        "label": "MessageViewSet",
        "importPath": "webchat.views",
        "description": "webchat.views",
        "isExtraImport": true,
        "detail": "webchat.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "stringify",
        "importPath": "flatted",
        "description": "flatted",
        "isExtraImport": true,
        "detail": "flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "importPath": "flatted",
        "description": "flatted",
        "isExtraImport": true,
        "detail": "flatted",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "FilterSet",
        "importPath": "django_filters",
        "description": "django_filters",
        "isExtraImport": true,
        "detail": "django_filters",
        "documentation": {}
    },
    {
        "label": "NumericRangeFilter",
        "importPath": "django_filters",
        "description": "django_filters",
        "isExtraImport": true,
        "detail": "django_filters",
        "documentation": {}
    },
    {
        "label": "CharFilter",
        "importPath": "django_filters",
        "description": "django_filters",
        "isExtraImport": true,
        "detail": "django_filters",
        "documentation": {}
    },
    {
        "label": "NumberFilter",
        "importPath": "django_filters",
        "description": "django_filters",
        "isExtraImport": true,
        "detail": "django_filters",
        "documentation": {}
    },
    {
        "label": "BooleanFilter",
        "importPath": "django_filters",
        "description": "django_filters",
        "isExtraImport": true,
        "detail": "django_filters",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "AuthenticationFailed",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "server.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "server.models",
        "description": "server.models",
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "Server",
        "importPath": "server.models",
        "description": "server.models",
        "isExtraImport": true,
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "server.models",
        "description": "server.models",
        "isExtraImport": true,
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "Channel",
        "importPath": "server.models",
        "description": "server.models",
        "isExtraImport": true,
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "Server",
        "importPath": "server.models",
        "description": "server.models",
        "isExtraImport": true,
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "server.models",
        "description": "server.models",
        "isExtraImport": true,
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "server.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "server.validators",
        "description": "server.validators",
        "detail": "server.validators",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "extend_schema_field",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiParameter",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiParameter",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "ChannelSerializer",
        "importPath": "server.serializers.channel",
        "description": "server.serializers.channel",
        "isExtraImport": true,
        "detail": "server.serializers.channel",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "OpenApiTypes",
        "importPath": "drf_spectacular.types",
        "description": "drf_spectacular.types",
        "isExtraImport": true,
        "detail": "drf_spectacular.types",
        "documentation": {}
    },
    {
        "label": "OpenApiTypes",
        "importPath": "drf_spectacular.types",
        "description": "drf_spectacular.types",
        "isExtraImport": true,
        "detail": "drf_spectacular.types",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "ViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Message",
        "importPath": "webchat.models",
        "description": "webchat.models",
        "isExtraImport": true,
        "detail": "webchat.models",
        "documentation": {}
    },
    {
        "label": "async_to_sync",
        "importPath": "asgiref.sync",
        "description": "asgiref.sync",
        "isExtraImport": true,
        "detail": "asgiref.sync",
        "documentation": {}
    },
    {
        "label": "JsonWebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "jwt",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jwt",
        "description": "jwt",
        "detail": "jwt",
        "documentation": {}
    },
    {
        "label": "database_sync_to_async",
        "importPath": "channels.db",
        "description": "channels.db",
        "isExtraImport": true,
        "detail": "channels.db",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "account.migrations.0001_initial",
        "description": "account.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"auth\", \"0012_alter_user_first_name_max_length\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Account\",\n            fields=[\n                (",
        "detail": "account.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AccountConfig",
        "kind": 6,
        "importPath": "account.apps",
        "description": "account.apps",
        "peekOfCode": "class AccountConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"account\"",
        "detail": "account.apps",
        "documentation": {}
    },
    {
        "label": "Account",
        "kind": 6,
        "importPath": "account.models",
        "description": "account.models",
        "peekOfCode": "class Account(AbstractUser):\n    pass",
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.asgi",
        "description": "backend.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "backend.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nSECRET_KEY = os.environ.get(\"SECRET_KEY\")\nDEBUG = os.environ.get(\"DEBUG\")\nALLOWED_HOSTS = []\n# تعریف برنامه‌ها\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "SECRET_KEY = os.environ.get(\"SECRET_KEY\")\nDEBUG = os.environ.get(\"DEBUG\")\nALLOWED_HOSTS = []\n# تعریف برنامه‌ها\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "DEBUG = os.environ.get(\"DEBUG\")\nALLOWED_HOSTS = []\n# تعریف برنامه‌ها\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# تعریف برنامه‌ها\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    # برنامه‌های خارجی",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    # برنامه‌های خارجی\n    'drf_spectacular',\n    \"rest_framework\",",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "ROOT_URLCONF = \"backend.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "WSGI_APPLICATION = \"backend.wsgi.application\"\n# پایگاه داده\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# اعتبارسنجی رمز عبور",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# اعتبارسنجی رمز عبور\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# فایل‌های استاتیک (CSS، جاوا اسکریپت، تصاویر)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nSTATIC_URL = 'static/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"media/\"",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# فایل‌های استاتیک (CSS، جاوا اسکریپت، تصاویر)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nSTATIC_URL = 'static/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"media/\"\n# نوع فیلد کلید اصلی پیش‌فرض",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# فایل‌های استاتیک (CSS، جاوا اسکریپت، تصاویر)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nSTATIC_URL = 'static/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"media/\"\n# نوع فیلد کلید اصلی پیش‌فرض\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "USE_TZ = True\n# فایل‌های استاتیک (CSS، جاوا اسکریپت، تصاویر)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nSTATIC_URL = 'static/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"media/\"\n# نوع فیلد کلید اصلی پیش‌فرض\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nSTATIC_URL = 'static/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"media/\"\n# نوع فیلد کلید اصلی پیش‌فرض\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"account.Account\"\nREST_FRAMEWORK = {\n    # YOUR SETTINGS",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"media/\"\n# نوع فیلد کلید اصلی پیش‌فرض\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"account.Account\"\nREST_FRAMEWORK = {\n    # YOUR SETTINGS\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nMEDIA_URL = \"media/\"\n# نوع فیلد کلید اصلی پیش‌فرض\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"account.Account\"\nREST_FRAMEWORK = {\n    # YOUR SETTINGS\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "MEDIA_URL = \"media/\"\n# نوع فیلد کلید اصلی پیش‌فرض\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"account.Account\"\nREST_FRAMEWORK = {\n    # YOUR SETTINGS\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        # \"rest_framework.authentication.SessionAuthentication\",",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"account.Account\"\nREST_FRAMEWORK = {\n    # YOUR SETTINGS\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        # \"rest_framework.authentication.SessionAuthentication\",\n        # 'rest_framework_simplejwt.authentication.JWTAuthentication',\n        \"account.authenticate.JWTCookieAuthentication\"\n    ],",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"account.Account\"\nREST_FRAMEWORK = {\n    # YOUR SETTINGS\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        # \"rest_framework.authentication.SessionAuthentication\",\n        # 'rest_framework_simplejwt.authentication.JWTAuthentication',\n        \"account.authenticate.JWTCookieAuthentication\"\n    ],\n    # 'DEFAULT_FILTER_BACKENDS': [",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    # YOUR SETTINGS\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        # \"rest_framework.authentication.SessionAuthentication\",\n        # 'rest_framework_simplejwt.authentication.JWTAuthentication',\n        \"account.authenticate.JWTCookieAuthentication\"\n    ],\n    # 'DEFAULT_FILTER_BACKENDS': [\n    #     'django_filters.rest_framework.DjangoFilterBackend',",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "SPECTACULAR_SETTINGS",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "SPECTACULAR_SETTINGS = {\n    \"SWAGGER_UI_DIST\": \"SIDECAR\",  # shorthand to use the sidecar instead\n    \"SWAGGER_UI_FAVICON_HREF\": \"SIDECAR\",\n    \"REDOC_DIST\": \"SIDECAR\",\n    # تنظیمات دیگر\n}\n# CORS_ALLOWED_ORIGINS = [\n#     \"http://127.0.0.1:5173\",\n#     \"htts://localhost:5173\"\n# ]",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ORIGIN_ALLOW_ALL",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "CORS_ORIGIN_ALLOW_ALL = True\nCORS_ALLOW_CREDENTIALS = True\nCHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels.layers.InMemoryChannelLayer\"\n    }\n}\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(seconds=10),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=30),  # - every 30 days relogin",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_CREDENTIALS",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "CORS_ALLOW_CREDENTIALS = True\nCHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels.layers.InMemoryChannelLayer\"\n    }\n}\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(seconds=10),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=30),  # - every 30 days relogin\n    # JWTCookie",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "CHANNEL_LAYERS",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "CHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels.layers.InMemoryChannelLayer\"\n    }\n}\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(seconds=10),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=30),  # - every 30 days relogin\n    # JWTCookie\n    \"ACCESS_TOKEN_NAME\": \"access_token\",",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "backend.settings",
        "description": "backend.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(seconds=10),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=30),  # - every 30 days relogin\n    # JWTCookie\n    \"ACCESS_TOKEN_NAME\": \"access_token\",\n    \"REFRESH_TOKEN_NAME\": \"refresh_token\",\n    \"JWT_COOKIE_SAMESITE\": \"Lax\"\n}",
        "detail": "backend.settings",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "backend.urls",
        "description": "backend.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r\"server\", ServerListView, basename=\"server-list\")\nrouter.register(\"category\", CategoryListView, basename=\"category-list\")\nrouter.register(\"messages\", MessageViewSet, basename=\"message-list\")\nrouter.register(\"users\", AccountViewSet, basename=\"account-list\")\nurlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"api/docs/schema/\", SpectacularAPIView.as_view(), name=\"schema\"),\n    path(\"api/docs/schema/ui/\", SpectacularSwaggerView.as_view()),\n    path(",
        "detail": "backend.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.urls",
        "description": "backend.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"api/docs/schema/\", SpectacularAPIView.as_view(), name=\"schema\"),\n    path(\"api/docs/schema/ui/\", SpectacularSwaggerView.as_view()),\n    path(\n        \"api/\",\n        include(\n            [\n                path(\"\", include(router.urls)),\n            ]",
        "detail": "backend.urls",
        "documentation": {}
    },
    {
        "label": "websocket_urlpatterns",
        "kind": 5,
        "importPath": "backend.urls",
        "description": "backend.urls",
        "peekOfCode": "websocket_urlpatterns = [\n    path(\"<str:serverId>/<str:channelId>\", WebChatConsumer.as_asgi())\n]\nif settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL,\n                          document_root=settings.MEDIA_ROOT)\n    urlpatterns += static(settings.STATIC_URL,\n                          document_root=settings.STATIC_ROOT)",
        "detail": "backend.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.wsgi",
        "description": "backend.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend.wsgi",
        "documentation": {}
    },
    {
        "label": "_Known",
        "kind": 6,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "class _Known:\n    def __init__(self):\n        self.key = []\n        self.value = []\nclass _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "_String",
        "kind": 6,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "class _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0\n    for _ in value:\n        keys.append(i)\n        i += 1\n    return keys",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "kind": 2,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "def parse(value, *args, **kwargs):\n    json = _json.loads(value, *args, **kwargs)\n    wrapped = []\n    for value in json:\n        wrapped.append(_wrap(value))\n    input = []\n    for value in wrapped:\n        if isinstance(value, _String):\n            input.append(value.value)\n        else:",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "def stringify(value, *args, **kwargs):\n    known = _Known()\n    input = []\n    output = []\n    i = int(_index(known, input, value))\n    while i < len(input):\n        output.append(_transform(known, input, input[i]))\n        i += 1\n    return _json.dumps(output, *args, **kwargs)",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "def stringify(value):\n    return _stringify(value, separators=(',', ':'))\nassert stringify([None, None]) == '[[null,null]]'\na = []\no = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "a",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "a = []\no = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['o']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)\na.append('two')\na.append(True)\no['one'] = 1\no['two'] = 'two'",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "b",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "b = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)\na.append('two')\na.append(True)\no['one'] = 1\no['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['one']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['one'] = 1\no['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['two']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['three']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])\no['test'] = {'test': 'OK'}",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['a']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])\no['test'] = {'test': 'OK'}\no['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['test']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['test'] = {'test': 'OK'}\no['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['array']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "a2",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "a2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o2",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "str",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "str = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "oo",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "oo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "ServerFilter",
        "kind": 6,
        "importPath": "server.filters.server",
        "description": "server.filters.server",
        "peekOfCode": "class ServerFilter(FilterSet):\n    by_serverid = NumberFilter(field_name=\"id\")\n#     member_username_contains = NumberFilter(field_name=\"username\")(\n#     field_name=\"member__pk\", lookup_expr=\"icontains\"\n# )\n    class Meta:\n        model = Server\n        fields = {\n            \"category__name\": [\"exact\"],\n            \"member\": [\"icontains\"],",
        "detail": "server.filters.server",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "server.migrations.0001_initial",
        "description": "server.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Category\",\n            fields=[\n                (",
        "detail": "server.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "server.migrations.0002_category_icon",
        "description": "server.migrations.0002_category_icon",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"server\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"category\",\n            name=\"icon\",\n            field=models.FileField(blank=True, null=True, upload_to=\"\"),\n        ),",
        "detail": "server.migrations.0002_category_icon",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "server.migrations.0003_channel_banner_channel_icon_alter_category_icon",
        "description": "server.migrations.0003_channel_banner_channel_icon_alter_category_icon",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"server\", \"0002_category_icon\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"channel\",\n            name=\"banner\",\n            field=models.ImageField(\n                blank=True,",
        "detail": "server.migrations.0003_channel_banner_channel_icon_alter_category_icon",
        "documentation": {}
    },
    {
        "label": "CategoryListSerializer",
        "kind": 6,
        "importPath": "server.serializers.category",
        "description": "server.serializers.category",
        "peekOfCode": "class CategoryListSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category\n        fields = \"__all__\"",
        "detail": "server.serializers.category",
        "documentation": {}
    },
    {
        "label": "ChannelSerializer",
        "kind": 6,
        "importPath": "server.serializers.channel",
        "description": "server.serializers.channel",
        "peekOfCode": "class ChannelSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Channel\n        fields = \"__all__\"",
        "detail": "server.serializers.channel",
        "documentation": {}
    },
    {
        "label": "ServerSerializer",
        "kind": 6,
        "importPath": "server.serializers.server",
        "description": "server.serializers.server",
        "peekOfCode": "class ServerSerializer(serializers.ModelSerializer):\n    num_members = serializers.SerializerMethodField()\n    channel_server = ChannelSerializer(many=True)\n    category = serializers.StringRelatedField()\n    class Meta:\n        model = Server\n        exclude = [\"member\", ]\n    @extend_schema_field(serializers.IntegerField())\n    def get_num_members(self, obj):\n        if hasattr(obj, \"num_members\"):",
        "detail": "server.serializers.server",
        "documentation": {}
    },
    {
        "label": "ServerConfig",
        "kind": 6,
        "importPath": "server.apps",
        "description": "server.apps",
        "peekOfCode": "class ServerConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"server\"",
        "detail": "server.apps",
        "documentation": {}
    },
    {
        "label": "IconFileMixin",
        "kind": 6,
        "importPath": "server.model_mixins",
        "description": "server.model_mixins",
        "peekOfCode": "class IconFileMixin(models.Model):\n    class Meta:\n        abstract = True\n    def delete_old_file(self, field_name, new_file):\n        if self.id:\n            existing = get_object_or_404(self.__class__, id=self.id)\n            old_file = getattr(existing, field_name)\n            if old_file != new_file:\n                old_file.delete(save=False)\n    def save(self, *args, **kwargs):",
        "detail": "server.model_mixins",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "server.models",
        "description": "server.models",
        "peekOfCode": "class Category(models.Model):\n    \"\"\"\n    مدل برای تعریف یک دسته‌بندی.\n    صفات:\n        name (str): نام دسته‌بندی.\n        description (str, اختیاری): توضیحات اختیاری برای دسته‌بندی.\n    \"\"\"\n    name = models.CharField(max_length=150)  # Name of the category\n    description = models.TextField(\n        blank=True, null=True",
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "Server",
        "kind": 6,
        "importPath": "server.models",
        "description": "server.models",
        "peekOfCode": "class Server(models.Model):\n    \"\"\"\n    مدل برای تعریف یک سرور.\n    صفات:\n        name (str): نام سرور.\n        owner (ForeignKey): مالک سرور.\n        category (ForeignKey): دسته‌بندی سرور.\n        description (str, اختیاری): توضیحات اختیاری برای سرور.\n        member (ManyToManyField): اعضای مرتبط با سرور.\n    \"\"\"",
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "Channel",
        "kind": 6,
        "importPath": "server.models",
        "description": "server.models",
        "peekOfCode": "class Channel(models.Model):\n    \"\"\"\n    مدل برای تعریف یک کانال.\n    صفات:\n        name (str): نام کانال.\n        owner (ForeignKey): مالک کانال.\n        topic (str): موضوع کانال.\n        server (ForeignKey): سروری که کانال به آن تعلق دارد.\n    \"\"\"\n    name = models.CharField(max_length=150)  # Name of the channel",
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "category_icon_upload_path",
        "kind": 2,
        "importPath": "server.models",
        "description": "server.models",
        "peekOfCode": "def category_icon_upload_path(instance, filename):\n    return f\"category/{instance.id}/category_icon/{filename}\"\ndef server_banner_upload_path(instance, filename):\n    return f\"category/{instance.id}/server_banner/{filename}\"\ndef server_icon_upload_path(instance, filename):\n    return f\"category/{instance.id}/server_icon/{filename}\"\n# تعریف یک مدل برای Category با یک نام و توضیحات اختیاری\nclass Category(models.Model):\n    \"\"\"\n    مدل برای تعریف یک دسته‌بندی.",
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "server_banner_upload_path",
        "kind": 2,
        "importPath": "server.models",
        "description": "server.models",
        "peekOfCode": "def server_banner_upload_path(instance, filename):\n    return f\"category/{instance.id}/server_banner/{filename}\"\ndef server_icon_upload_path(instance, filename):\n    return f\"category/{instance.id}/server_icon/{filename}\"\n# تعریف یک مدل برای Category با یک نام و توضیحات اختیاری\nclass Category(models.Model):\n    \"\"\"\n    مدل برای تعریف یک دسته‌بندی.\n    صفات:\n        name (str): نام دسته‌بندی.",
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "server_icon_upload_path",
        "kind": 2,
        "importPath": "server.models",
        "description": "server.models",
        "peekOfCode": "def server_icon_upload_path(instance, filename):\n    return f\"category/{instance.id}/server_icon/{filename}\"\n# تعریف یک مدل برای Category با یک نام و توضیحات اختیاری\nclass Category(models.Model):\n    \"\"\"\n    مدل برای تعریف یک دسته‌بندی.\n    صفات:\n        name (str): نام دسته‌بندی.\n        description (str, اختیاری): توضیحات اختیاری برای دسته‌بندی.\n    \"\"\"",
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "server_list_docs",
        "kind": 5,
        "importPath": "server.schema",
        "description": "server.schema",
        "peekOfCode": "server_list_docs = extend_schema(responses=ServerSerializer(many=True), parameters=[\n    OpenApiParameter(\n        name='category',\n        type=OpenApiTypes.STR,\n        description='category of formats for your needs'\n    ),\n    OpenApiParameter(\n        name='qty',\n        type=OpenApiTypes.INT,\n        location='openAPIParameter.QUERY',",
        "detail": "server.schema",
        "documentation": {}
    },
    {
        "label": "validate_icon_image_size",
        "kind": 2,
        "importPath": "server.validators",
        "description": "server.validators",
        "peekOfCode": "def validate_icon_image_size(image):\n    if image:\n        with Image.open(image) as img:\n            if img.width > 70 or img.height > 70:\n                raise ValidationError(\n                    f\"The maximum allowed size is 70x70. Your size = {img.size}\"\n                )\ndef validate_image_file_extension(value):\n    ext = os.path.splitext(value.name)[1]\n    valid_extensions = ['.jpg', '.jpeg', '.png', '.gif']",
        "detail": "server.validators",
        "documentation": {}
    },
    {
        "label": "validate_image_file_extension",
        "kind": 2,
        "importPath": "server.validators",
        "description": "server.validators",
        "peekOfCode": "def validate_image_file_extension(value):\n    ext = os.path.splitext(value.name)[1]\n    valid_extensions = ['.jpg', '.jpeg', '.png', '.gif']\n    if not ext.lower() in valid_extensions:\n        raise ValidationError(\n            f\"Your extension must be one of {valid_extensions}, but got {ext}\")",
        "detail": "server.validators",
        "documentation": {}
    },
    {
        "label": "ServerListView",
        "kind": 6,
        "importPath": "server.views",
        "description": "server.views",
        "peekOfCode": "class ServerListView(ViewSet):\n    queryset = Server.objects.all()\n    # permission_classes = (permissions.IsAuthenticated,)\n    @server_list_docs\n    def list(self, request):\n        category = request.query_params.get(\"category\")\n        qty = request.query_params.get(\"qty\")\n        by_user = request.query_params.get(\"by_user\") == \"true\"\n        by_serverid = request.query_params.get(\"by_serverid\")\n        with_num_members = request.query_params.get(",
        "detail": "server.views",
        "documentation": {}
    },
    {
        "label": "CategoryListView",
        "kind": 6,
        "importPath": "server.views",
        "description": "server.views",
        "peekOfCode": "class CategoryListView(ViewSet):\n    queryset = Category.objects.all()\n    @extend_schema(responses=CategoryListSerializer)\n    def list(self, request):\n        serializer = CategoryListSerializer(self.queryset, many=True)\n        return Response(serializer.data)",
        "detail": "server.views",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "webchat.migrations.0001_initial",
        "description": "webchat.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Conversation\",\n            fields=[\n                (",
        "detail": "webchat.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "MessageSerializer",
        "kind": 6,
        "importPath": "webchat.serializers.MessageSerializer",
        "description": "webchat.serializers.MessageSerializer",
        "peekOfCode": "class MessageSerializer(serializers.ModelSerializer):\n    sender = serializers.StringRelatedField\n    class Meta:\n        model = Message\n        fields = [\"id\", \"sender\", \"content\", \"timestamp\"]",
        "detail": "webchat.serializers.MessageSerializer",
        "documentation": {}
    },
    {
        "label": "WebchatConfig",
        "kind": 6,
        "importPath": "webchat.apps",
        "description": "webchat.apps",
        "peekOfCode": "class WebchatConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"webchat\"",
        "detail": "webchat.apps",
        "documentation": {}
    },
    {
        "label": "WebChatConsumer",
        "kind": 6,
        "importPath": "webchat.consumer",
        "description": "webchat.consumer",
        "peekOfCode": "class WebChatConsumer(JsonWebsocketConsumer):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.channel_id = None\n        self.user = None\n    def connect(self):\n        self.user = self.scope[\"user\"]\n        self.accept()\n        if not self.user.is_authenticated:\n            self.close(code=4001)",
        "detail": "webchat.consumer",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "webchat.consumer",
        "description": "webchat.consumer",
        "peekOfCode": "User = get_user_model()\nclass WebChatConsumer(JsonWebsocketConsumer):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.channel_id = None\n        self.user = None\n    def connect(self):\n        self.user = self.scope[\"user\"]\n        self.accept()\n        if not self.user.is_authenticated:",
        "detail": "webchat.consumer",
        "documentation": {}
    },
    {
        "label": "JWTAuthMiddleWare",
        "kind": 6,
        "importPath": "webchat.middleware",
        "description": "webchat.middleware",
        "peekOfCode": "class JWTAuthMiddleWare:\n    def __init__(self, app):\n        self.app = app\n    async def __call__(self, scope, recieve, send):\n        headers_dict = dict(scope[\"headers\"])\n        cookies_str = headers_dict.get(b\"cookie\", b\"\").decode()\n        cookies = {cookie.split(\"=\")[0]: cookie.split(\"=\")[1] for cookie in cookies_str.split(\"; \")}\n        access_token = cookies.get(\"access_token\")\n        scope[\"token\"] = access_token\n        scope[\"user\"] = await get_user(scope)",
        "detail": "webchat.middleware",
        "documentation": {}
    },
    {
        "label": "get_user",
        "kind": 2,
        "importPath": "webchat.middleware",
        "description": "webchat.middleware",
        "peekOfCode": "def get_user(scope):\n    token = scope[\"token\"]\n    model = get_user_model()\n    try:\n        if token:\n            user_id = jwt.decode(token, settings.SECRET_KEY, algorithms=[\"HS256\"])[\"user_id\"]\n            return model.objects.get(id=user_id)\n        else:\n            return AnonymousUser()\n    except (jwt.exceptions.DecodeError, model.DoesNotExist):",
        "detail": "webchat.middleware",
        "documentation": {}
    },
    {
        "label": "Conversation",
        "kind": 6,
        "importPath": "webchat.models",
        "description": "webchat.models",
        "peekOfCode": "class Conversation(models.Model):\n    channel_id = models.CharField(max_length=255)\n    create_at = models.DateTimeField(auto_now_add=True)\nclass Message(models.Model):\n    conversation = models.ForeignKey(Conversation, on_delete=models.CASCADE, related_name='messages')\n    sender = models.ForeignKey(get_user_model(), on_delete=models.CASCADE)\n    content = models.TextField()\n    timestamp = models.DateTimeField(auto_now_add=True)",
        "detail": "webchat.models",
        "documentation": {}
    },
    {
        "label": "Message",
        "kind": 6,
        "importPath": "webchat.models",
        "description": "webchat.models",
        "peekOfCode": "class Message(models.Model):\n    conversation = models.ForeignKey(Conversation, on_delete=models.CASCADE, related_name='messages')\n    sender = models.ForeignKey(get_user_model(), on_delete=models.CASCADE)\n    content = models.TextField()\n    timestamp = models.DateTimeField(auto_now_add=True)",
        "detail": "webchat.models",
        "documentation": {}
    },
    {
        "label": "list_message_docs",
        "kind": 5,
        "importPath": "webchat.schemas",
        "description": "webchat.schemas",
        "peekOfCode": "list_message_docs = extend_schema(\n    responses=MessageSerializer(many=True),\n    parameters=[\n        OpenApiParameter(\n            name=\"channel_id\",\n            type=OpenApiTypes.STR,\n            location=OpenApiParameter.QUERY,\n            description=\"ID of the channel\",\n        ),\n        ]",
        "detail": "webchat.schemas",
        "documentation": {}
    },
    {
        "label": "MessageViewSet",
        "kind": 6,
        "importPath": "webchat.views",
        "description": "webchat.views",
        "peekOfCode": "class MessageViewSet(ViewSet):\n    @list_message_docs\n    def list(self, request):\n        channel_id = request.query_params.get('channel_id', None)\n        try:\n            conversation = Conversation.objects.get(channel_id=channel_id)\n            message = conversation.messages.all()\n            serializer = MessageSerializer(message, many=True)\n            return Response(serializer.data)\n        except Conversation.DoesNotExist:",
        "detail": "webchat.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]